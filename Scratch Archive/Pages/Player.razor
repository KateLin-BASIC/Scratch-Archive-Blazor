@page "/player/{id}"

@inject HttpClient _http
@inject IJSRuntime _js
@inject NavigationManager _navigator

@using Scratch_Archive.Models;

<div id="player">
    <canvas id="canvas"></canvas>
</div>

@code {
    [Parameter]
    public string? Id { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _js.InvokeVoidAsync("resizeCanvas"); //캔버스를 화면 크기에 맞춤
        await _js.InvokeVoidAsync("registerEvent"); //창의 크기가 바뀌면 resizeCanvas(); 함수를 호출하도록 이벤트로 등록함

        var versions = await _http.GetFromJsonAsync<ScratchVersion[]>("assets/data/versions.json"); //버전 json 불러오기

        if (versions != null && byte.TryParse(this.Id, out var versionId) && (versionId + 1) <= versions.Length)
        {
            Console.WriteLine("Starting SqueakJS VM...");
            Console.WriteLine($"Scratch Version: {versions[versionId].Name} ({versions[versionId].Id})");
            Console.WriteLine($"Scratch Image Url: {versions[versionId].FileUrl}");

            await _js.InvokeVoidAsync("SqueakJS.runSqueak", _navigator.BaseUri + versions[versionId].FileUrl, "canvas", new { Fullscreen = true });
        }
        else
        {
            _navigator.NavigateTo("/");
        }
    }
}